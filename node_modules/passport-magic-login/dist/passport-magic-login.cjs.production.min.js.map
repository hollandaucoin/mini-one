{"version":3,"file":"passport-magic-login.cjs.production.min.js","sources":["../src/token.ts","../src/index.ts"],"sourcesContent":["import jwt, { SignOptions } from 'jsonwebtoken';\n\ntype JwtPayload = {\n  destination: string;\n  code: string;\n  [key: string]: any;\n};\n\nexport const decodeToken = (secret: string, token?: string) => {\n  if (typeof token !== 'string') throw new Error('No token provided');\n\n  return jwt.verify(token, secret);\n};\n\nexport const generateToken = (\n  secret: string,\n  payload: JwtPayload,\n  options: SignOptions = { expiresIn: '60min' }\n) => jwt.sign(payload, secret, options);\n","import { Request, Response } from 'express';\nimport { SignOptions } from 'jsonwebtoken';\nimport { StrategyCreatedStatic } from 'passport';\nimport { generateToken, decodeToken } from './token';\n\ntype VerifyCallback = (\n  payload: any,\n  verifyCallback: (err?: Error | null, user?: Object, info?: any) => void,\n  req: Request\n) => void;\n\ninterface Options {\n  secret: string;\n  callbackUrl: string;\n  jwtOptions?: SignOptions;\n  sendMagicLink: (\n    destination: string,\n    href: string,\n    verificationCode: string,\n    req: Request\n  ) => Promise<void>;\n  verify: VerifyCallback;\n\n  /** @deprecated */\n  confirmUrl?: string;\n}\n\nclass MagicLoginStrategy {\n  name: string = 'magiclogin';\n\n  constructor(private _options: Options) {}\n\n  authenticate(\n    this: StrategyCreatedStatic & MagicLoginStrategy,\n    req: Request\n  ): void {\n    const self = this;\n\n    let payload = null;\n\n    try {\n      payload = decodeToken(\n        self._options.secret,\n        (req.query.token || req.body?.token) as string\n      );\n    } catch (error) {\n      const defaultMessage = 'No valid token provided';\n      const message = error instanceof Error ? error.message : defaultMessage;\n\n      return self.fail(message);\n    }\n\n    const verifyCallback = function(\n      err?: Error | null,\n      user?: Object,\n      info?: any\n    ) {\n      if (err) {\n        return self.error(err);\n      } else if (!user) {\n        return self.fail(info);\n      } else {\n        return self.success(user, info);\n      }\n    };\n\n    self._options.verify(payload, verifyCallback, req);\n  }\n\n  send = (req: Request, res: Response): void => {\n    const payload = req.method === 'GET' ? req.query : req.body;\n    if (\n      req.method === 'POST' &&\n      !req.headers['content-type']?.match('application/json')\n    ) {\n      res\n        .status(400)\n        .send('Content-Type must be application/json when using POST method.');\n      return;\n    }\n\n    if (!payload.destination) {\n      res.status(400).send('Please specify the destination.');\n      return;\n    }\n\n    const code = Math.floor(Math.random() * 90000) + 10000 + '';\n    const jwt = generateToken(\n      this._options.secret,\n      {\n        ...payload,\n        code,\n      },\n      this._options.jwtOptions\n    );\n\n    this._options\n      .sendMagicLink(\n        payload.destination,\n        `${this._options.callbackUrl}?token=${jwt}`,\n        code,\n        req\n      )\n      .then(() => {\n        res.json({ success: true, code });\n      })\n      .catch((error: any) => {\n        console.error(error);\n        res.json({ success: false, error });\n      });\n  };\n\n  /** @deprecated */\n  confirm = (req: Request, res: Response): void => {\n    console.warn(\n      `magicLink.confirm was removed in v1.0.7, it is no longer necessary.`\n    );\n    res.redirect(`${this._options.callbackUrl}?token=${req.query.token}`);\n  };\n}\n\nexport default MagicLoginStrategy;\n"],"names":["generateToken","secret","payload","options","expiresIn","jwt","sign","_options","req","res","method","query","body","headers","_req$headers$content","match","destination","code","Math","floor","random","_this","jwtOptions","sendMagicLink","callbackUrl","then","json","success","error","console","status","send","warn","redirect","token","authenticate","self","this","Error","verify","decodeToken","_req$body","message","fail","err","user","info"],"mappings":"sWAQO,IAMMA,EAAgB,SAC3BC,EACAC,EACAC,mBAAAA,IAAAA,EAAuB,CAAEC,UAAW,UACjCC,EAAIC,KAAKJ,EAASD,EAAQE,0CCYTI,4BAAAA,YAFL,uBAyCR,SAACC,EAAcC,SACdP,EAAyB,QAAfM,EAAIE,OAAmBF,EAAIG,MAAQH,EAAII,QAEtC,SAAfJ,EAAIE,iBACHF,EAAIK,QAAQ,kBAAZC,EAA6BC,MAAM,uBAQjCb,EAAQc,iBAKPC,EAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAoB,IAAQ,GACnDf,EAAML,EACVqB,EAAKd,SAASN,YAETC,GACHe,KAAAA,IAEFI,EAAKd,SAASe,YAGhBD,EAAKd,SACFgB,cACCrB,EAAQc,YACLK,EAAKd,SAASiB,sBAAqBnB,EACtCY,EACAT,GAEDiB,MAAK,WACJhB,EAAIiB,KAAK,CAAEC,SAAS,EAAMV,KAAAA,cAErB,SAACW,GACNC,QAAQD,MAAMA,GACdnB,EAAIiB,KAAK,CAAEC,SAAS,EAAOC,MAAAA,YA1B7BnB,EAAIqB,OAAO,KAAKC,KAAK,wCAPrBtB,EACGqB,OAAO,KACPC,KAAK,+EAoCF,SAACvB,EAAcC,GACvBoB,QAAQG,4EAGRvB,EAAIwB,SAAYZ,EAAKd,SAASiB,sBAAqBhB,EAAIG,MAAMuB,2BArF/DC,aAAA,SAEE3B,OAEM4B,EAAOC,KAETnC,EAAU,eAGZA,EDjCqB,SAACD,EAAgBiC,MACrB,iBAAVA,EAAoB,MAAM,IAAII,MAAM,4BAExCjC,EAAIkC,OAAOL,EAAOjC,GC8BXuC,CACRJ,EAAK7B,SAASN,OACbO,EAAIG,MAAMuB,iBAAS1B,EAAII,aAAJ6B,EAAUP,QAEhC,MAAON,OAEDc,EAAUd,aAAiBU,MAAQV,EAAMc,QADxB,iCAGhBN,EAAKO,KAAKD,GAiBnBN,EAAK7B,SAASgC,OAAOrC,GAdE,SACrB0C,EACAC,EACAC,UAEIF,EACKR,EAAKR,MAAMgB,GACRC,EAGHT,EAAKT,QAAQkB,EAAMC,GAFnBV,EAAKO,KAAKG,KAMyBtC"}